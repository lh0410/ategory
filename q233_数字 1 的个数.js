/**
 * @param {number} n
 * @return {number}
 * 给定一个整数 n，计算所有小于等于 n 的非负整数中数字 1 出现的个数。

  

 示例 1：

 输入：n = 13
 输出：6
 示例 2：

 输入：n = 0
 输出：0
 1
 10 11 12 13 14 15 16 17 18 19
 21
 31
 41
 51
 61
 71
 81
 91
 0-99: 19个
 思路：推算在十进制每一位上的1的个数。
 例如  求百位上1的个数：
 0   -> 12019： 100-199 1100-1199 2100-2199 ... 11100-11199，由更高位决定。 12*100
 1   -> 12119： 100-199 1100-1199 2100-2199 ... 11100-11199， 12100-12119，由高低位共同决定。 12*100+20
 2-9 -> 12219： 100-199 1100-1199 2100-2199 ... 11100-11199 12100-12199， 由高位决定。 13*100
 来源：力扣（LeetCode）
 链接：https://leetcode-cn.com/problems/number-of-digit-one
 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
 */
var countDigitOne = function (n) {
  let sum = 0;
  for (let i = 1; i <= n; i *= 10) {
    let low = n % i;
    let high = parseInt(n / i);
    let cur = high % 10;
    high = parseInt(high / 10);
    sum += i * high;
    if (cur === 1) {
      sum += low + 1;
    }
    if (cur > 1) {
      sum += i;
    }
  }
  return sum;
};

